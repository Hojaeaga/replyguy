name: Backend Code Execution Check

on:
  pull_request:
    branches: [main]
    paths:
      - "backend/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          # Use caching with proper paths
          cache: "npm"
          cache-dependency-path: |
            backend/MCP_Execution_Server/package-lock.json
            backend/Validation_Service/package-lock.json

      # Run both services in parallel
      - name: Build services
        run: |
          # Run both builds in parallel
          cd backend/MCP_Execution_Server && npm ci && npm run build &
          MCP_PID=$!

          cd backend/Validation_Service && npm ci && npm run build &
          VS_PID=$!

          # Wait for both processes to complete
          wait $MCP_PID
          MCP_STATUS=$?

          wait $VS_PID
          VS_STATUS=$?

          # Check if any of the builds failed
          if [ $MCP_STATUS -ne 0 ] || [ $VS_STATUS -ne 0 ]; then
            exit 1
          fi

      # Docker compose validation - only check config, skip build
      - name: Install Docker Compose
        run: |
          # Skip if docker-compose is already installed (for GitHub Actions)
          if ! command -v docker-compose &> /dev/null; then
            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi

      - name: Validate docker-compose.yml
        run: |
          cd backend
          # Create dummy .env file with required variables from docker-compose.yml
          echo "PRIVATE_KEY_AGGREGATOR=0x0000000000000000000000000000000000000000000000000000000000000001" > .env
          echo "PRIVATE_KEY_ATTESTER1=0x0000000000000000000000000000000000000000000000000000000000000002" >> .env
          echo "PRIVATE_KEY_ATTESTER2=0x0000000000000000000000000000000000000000000000000000000000000003" >> .env
          echo "PRIVATE_KEY_ATTESTER3=0x0000000000000000000000000000000000000000000000000000000000000004" >> .env
          echo "PRIVATE_KEY_PERFORMER=0x0000000000000000000000000000000000000000000000000000000000000005" >> .env
          echo "OTHENTIC_BOOTSTRAP_ID=dummy_bootstrap_id" >> .env

          # Check if docker-compose file is valid
          docker-compose config

      # Only build Docker images on main branch or when Dockerfiles change
      - name: Check if Docker build is needed
        id: check-docker
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]] || git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep -q "Dockerfile\|docker-compose"; then
            echo "run_docker_build=true" >> $GITHUB_OUTPUT
          else
            echo "run_docker_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check-docker.outputs.run_docker_build == 'true'
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Check Docker build
        if: steps.check-docker.outputs.run_docker_build == 'true'
        run: |
          cd backend
          # Use buildx with cache and parallel builds
          docker buildx bake --load --progress=plain
